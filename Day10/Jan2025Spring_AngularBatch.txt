Last Lecture Agenda
1 Spring Framework:
	- Pre-requisits: OOP concepts & coding,core java,Introductory knowlegdge of Advanced Java.
	- Spring is light-weight comprehensive framework to Simplify Java (SE+EE) Development.
	- Light-weight -- Framework size is small + minimal num of jars (for give req.) + Minimal overheads.
		- Comprehensive -- Provides lot of functionality in minimal code.
		- Simplify Java Development -- Developer can focus on business logic, Spring manage testing, integration of other libs, ...
		- Depedency Injection
		
- Spring Framework:
		- 2003 -- Rod Johnson -- sourceforge.net -- Open Source project.
		- Spring 1.x.x
		- Spring 2.x
		- * Spring 3.x -- Annotation based config.
		- * Spring 4.x => 4.x.x
		- Spring 5.x
		- Spring 6.x
5 Spring Features/ Advantages 
		- Modular -- different jars for different functionalities.
		- Flexible -- Most of frameworks follow "All or nothing" policy -- Spring is exception
		- Test Driven Development -- Unit testing is well integrated in Spring + Support for other testing.
		- Maintainable/Extendable -- Start with interfaces & can change impl over the time.
		- Exceptions -- Spring convert/wraps all checked exception into unchecked one.
		- Depedency Injection

What is IoC?

- IoC container: (Inversion of control)
		-It is used to create object of class,maintain life cycle of object,manage its state,  by spring. So it is called Loosely coupling, for this feature spring is more popular in market
		 - Mainly it based on two concept DI(Dependency Injection) & IOC (Inversion of control)
		 
		- IoC -- Inversion of Control
			 - It is an architectural pattern describing that programmer do not need to create an object, instead just describe how it should be created. No need to directly connect your components & services together in program, instead just describe which services are needed by which components in a configuration file/xml file. The spring IOC container is then responsible.
			- IOC create a singleton object means that object create only ones instance & we can use that object through out the application whenever we need.
			
		- DI -- Dependency Injection
			- The object initialization is done by spring -- adding dependencies into the object (i.e. initializing its properties).
			- DI is way to achieving the IOC.i.e to implement IOC we reuired Dependency Injection
			- Runtime object creation is not allowed
			- It Create Object before runtime & it inject whenever we want it gives object.
			
			
IOC Container Has 2 types

 1 BeanFactory
	- It is Interface
	- we can use some implementated classess using this interface
 2 ApplicationContext
	- It is Interface
	- we can use some implementated classess using this interface
	- Application Context is nothing but spring container.In newer version of spring Application Context to developed enterprise application.
	- class is used ClassPathXMLApplicationContext
			

Today's Lecture Agenda
1 IOC Continue 
2 Dependancy Injection
	1 Setter level Injection 
	2 Constructor level
	3 Field level 


	